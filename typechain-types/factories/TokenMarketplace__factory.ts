/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenMarketplace,
  TokenMarketplaceInterface,
} from "../TokenMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
    ],
    name: "AllBidsCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "BidCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
    ],
    name: "BidClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "BidCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "BuyToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelAllBids",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "cancelBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endSaleRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTradeRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBids",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct TokenMarketplace.Bid[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referral",
        type: "address",
      },
    ],
    name: "registration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registrations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "saleRounds",
    outputs: [
      {
        internalType: "uint256",
        name: "maxTradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startSaleRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "trade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tradeRounds",
    outputs: [
      {
        internalType: "uint256",
        name: "tradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346200007457601f6200238338819003918201601f19168301916001600160401b038311848410176200007a578084926020946040528339810103126200007457516001600160a01b03811681141562000074576200006490620000b8565b6040516120ba9081620002c98239f35b50600080fd5b50505050634e487b7160e01b600052604160045260246000fd5b81156200009f570490565b505050634e487b7160e01b600052601260045260246000fd5b6001805460ff191681556002556200013190620000dc670de0b6b3a7640000600455565b620000e76000600555565b620000f46203f480600655565b620001046509184e72a000600755565b6200010f336200022b565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60075460059060026200014f83546000526008602052604060002090565b0155620001786200016b82546000526008602052604060002090565b670de0b6b3a76400009055565b6200019e816200019381546000526008602052604060002090565b01805460ff19169055565b60006001620001b883546000526008602052604060002090565b0155426004620001d383546000526008602052604060002090565b01555460036200022762000216620001f5846000526008602052604060002090565b5460026200020d866000526008602052604060002090565b01549062000094565b926000526008602052604060002090565b0155565b6001600160a01b03811660009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff161562000273575050565b818052602082815260408084206001600160a01b038416600090815292529020600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d81604051a456fe608060408181526004361015610017575b5050600080fd5b600091823560e01c90816301ffc9a71461044c575080630840605a14610435578063248a9ca3146103fb5780632f2ff15d146103e3578063304721d2146103cc57806336568abe146103b457806345199ce11461033957806349c37867146102e65780635c975abb146102ba57806391d148541461025c578063942e6bcf1461020e5780639703ef35146101f7578063a217fddf146101d7578063a4821719146101c5578063b59bfa03146101ae578063b7751c7114610196578063b81c78ec1461016b578063d547741f14610153578063dd27ee6b1461013c578063de55de28146101215763e20be69a1461010c57610010565b61011e6101183661051d565b9061158a565b51f35b50346101385761013036610504565b61011e6119b3565b5080fd5b50346101385761014b36610504565b61011e611772565b50346101385761011e610165366104d5565b90610899565b503461013857610192915061017f36610504565b610187611f5d565b905191829182610533565b0390f35b50346101385761011e6101a83661051d565b90611e20565b5034610138576101bd36610504565b61011e610d49565b506101cf36610504565b61011e611223565b5090346101f257506101e836610504565b5160008152602090f35b809150fd5b50346101385761011e610209366104c3565b611b9d565b5034610138576101929150610243610225366104a0565b6001600160a01b039081166000908152600a60205260409020541690565b90516001600160a01b0390911681529081906020820190565b50346101385761019291506102a96102a261028b610279366104d5565b91906000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b905190151581529081906020820190565b50346101385761019291506102ce36610504565b600154905160ff909116151581529081906020820190565b503461013857610192915061031d6102fd366104c3565b6000526009602052604060002080549160ff600260018401549301541690565b9251918252602082015290151560408201529081906060820190565b5034610138576101929150610383610350366104c3565b600052600860205260406000209081549160018101549160028201549160038101549160ff600560048401549301541690565b9551948552602085019390935260408401919091526060830152608082015290151560a082015290819060c0820190565b50346101385761011e6103c6366104d5565b906108c1565b5034610138576103db36610504565b61011e610e5d565b50346101385761011e6103f5366104d5565b906105bc565b5034610138576101929150610426610412366104c3565b600052600060205260016040600020015490565b90519081529081906020820190565b50346101385761011e610447366104a0565b610be7565b92915050346101f257508061019261046b61046636610476565b610590565b151582526020820190565b602090600319011261049a576004356001600160e01b031981168114156100105790565b50600080fd5b602090600319011261049a576004356001600160a01b0381168114156100105790565b602090600319011261049a5760043590565b604090600319011261049a57600435906024356001600160a01b0381168114156104fc5790565b505050600080fd5b600090600319011261049a57565b600091031261049a57565b604090600319011261049a576004359060243590565b60208082019080835283518092528060408094019401926000905b83821061055d57505050505090565b845180516001600160a01b031687528084015187850152810151868201526060909501949382019360019091019061054e565b63ffffffff60e01b16637965db0b60e01b81149081156105ae575090565b6301ffc9a760e01b14919050565b90600091808352826020526105d960016040852001543390610735565b808352602083815260408085206001600160a01b0385166000908152925290205460ff161561060757505050565b808352602083815260408085206001600160a01b038516600090815292529020600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d3393604051a4565b918091926000905b82821061067b575011610674575050565b6000910152565b91508060209183015181860152018291610663565b906106a36020928281519485920161065b565b0190565b50634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176106da57604052565b6106e26106a7565b604052565b90601f8019910116810190811067ffffffffffffffff8211176106da57604052565b60409160208252610729815180928160208601526020868601910161065b565b601f01601f1916010190565b9081600052600060205260ff6107618260406000209060018060a01b0316600052602052604060002090565b54161561076c575050565b6001600160a01b0316915061077f610a59565b91603061078b84610a8b565b53607861079784610aa1565b5360295b6001811161084a5750610846926108206107c46107fd946107bf61082e9515610aec565b610b38565b61081a6040519586947f416363657373436f6e74726f6c3a206163636f756e742000000000000000000060208701526037860190610690565b7001034b99036b4b9b9b4b733903937b6329607d1b815260110190565b90610690565b03601f1981018352826106e7565b60405162461bcd60e51b815291829160048301610709565b0390fd5b9080600f6108879216601081101561088c575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a61087d8487610ab2565b5360041c91610ad1565b61079b565b610894610a74565b61085d565b906108bf918060005260006020526108ba6001604060002001543390610735565b61093c565b565b906001600160a01b0381163314156108dc576108bf9161093c565b505060405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260849150fd5b6000818152602081815260408083206001600160a01b03861684529091528120549092919060ff1661096d57505050565b808352602083815260408085206001600160a01b03851660009081529252902060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b3393604051a4565b50634e487b7160e01b600052601160045260246000fd5b60619080600019048211811515166109eb570290565b6109f36109be565b0290565b6103b69080600019048211811515166109eb570290565b6103cf9080600019048211811515166109eb570290565b80600019048211811515166109eb570290565b81198111610a44570190565b6106a36109be565b604051906108bf826106be565b60405190610a66826106be565b602a82526040366020840137565b50634e487b7160e01b600052603260045260246000fd5b602090805115610a99570190565b6106a3610a74565b602190805160011015610a99570190565b906020918051821015610ac457010190565b610acc610a74565b010190565b8015610adf575b6000190190565b610ae76109be565b610ad8565b15610af357565b50606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906080820182811067ffffffffffffffff821117610bda575b6040526042825260603660208401376030610b6e83610a8b565b536078610b7a83610aa1565b536041905b60018211610b9557610b92915015610aec565b90565b80600f610bc792166010811015610bcd575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a61087d8486610ab2565b90610b7f565b610bd5610a74565b610ba7565b610be26106a7565b610b54565b6001600160a01b0381168015610c94573314610c3057336000908152600a602052604090206108bf919080546001600160a01b0319166001600160a01b03909216919091179055565b505060405162461bcd60e51b815260206004820152603460248201527f4d61726b6574706c6163653a20596f752063616e27742063686f6f736520796f6044820152731d5c9cd95b1988185cc818481c9959995c9c985b60621b6064820152608490fd5b505060405162461bcd60e51b815260206004820152602d60248201527f4d61726b6574706c6163653a20526566657272616c2063616e2774206265206160448201526c207a65726f206164647265737360981b606482015260849150fd5b15610cf957565b5060405162461bcd60e51b815260206004820152602160248201527f4d61726b6574706c6163653a20596f7520617265206e6f7420616e2061646d696044820152603760f91b6064820152608490fd5b33600090815260008051602061205783398151915260205260408120610d749060ff905b5416610cf2565b600554610e43575b610da46005610d9681546000526008602052604060002090565b01805460ff19166001179055565b600354610dc1906001600160a01b03165b6001600160a01b031690565b6003610dd96005546000526008602052604060002090565b0154813b15610e3c576040516340c10f1960e01b8152306004820152602481019190915291908290604490829084905af18015610e2f575b610e185750565b6108bf90610e263d826106e7565b3d810190610512565b610e37610e50565b610e11565b5050809150fd5b610e4b611091565b610d7c565b506040513d6000823e3d90fd5b33600090815260008051602061205783398151915260205260408120610ed491600591610ec99190610e919060ff90610d6d565b82549081815260086020526001604082200154828252600860205260408220541415610f03575b506000526008602052604060002090565b01805460ff19169055565b610edc610fbd565b6108bf6005546000526009602052600260406000206000815501600160ff19825416179055565b610f22600460408385610f2a9552600860205220015460065490610a38565b421015610f30565b38610eb8565b15610f3757565b5060405162461bcd60e51b815260206004820152603160248201527f4d6172746b6574706c6163653a2053616c6520726f756e642074696d65206973604482015270081b9bdd08199a5b9a5cda1959081e595d607a1b6064820152608490fd5b60018110610adf576000190190565b818110610fb1570390565b610fb96109be565b0390565b6005546001610fee6003610fdb846000526008602052604060002090565b0154926000526008602052604060002090565b015490818110611061575b81811415611005575050565b60035461101a906001600160a01b0316610db5565b91823b1561105857604051632770a7eb60e21b815230600482015291036024820152906000908290604490829084905af18015610e2f57610e185750565b50505050600080fd5b6110696109be565b610ff9565b8115611078570490565b505050634e487b7160e01b600052601260045260246000fd5b600580546001811061117c575b6000198101600052600860205260406000209060026110ef6110de826110d66110c686610f97565b6000526009602052604060002090565b950154611fff565b926000526008602052604060002090565b01555461110782546000526008602052604060002090565b5561112181610ec981546000526008602052604060002090565b6000600161113a83546000526008602052604060002090565b01555460036111786110de611159846000526008602052604060002090565b546002611170866000526008602052604060002090565b01549061106e565b0155565b6111846109be565b61109e565b1561119057565b5060405162461bcd60e51b815260206004820152604560248201527f4d61726b6574706c6163653a2054686520746f6b656e2070757263686173652060448201527f6c696d697420666f72207468697320726f756e6420686173206265656e2072656064820152641858da195960da1b608482015260a490fd5b9081602091031261001057518015158114156100105790565b7ff6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb61125a6005546000526008602052604060002090565b6002600182019161127861126f348554610a38565b82541015611189565b611280611346565b6112a28261129a6005546000526008602052604060002090565b01543461106e565b926112ae848254610a38565b90556003546112c5906001600160a01b0316610db5565b60405163a9059cbb60e01b81523360048201526024810185905290602090829060449082906000905af18015611339575b61131b575b50015460408051338152602081019390935282015280606081015b0390a1565b611332906113293d826106e7565b3d81019061120a565b50386112fb565b611341610e50565b6112f6565b336000908152600a6020526040808220546001600160a01b03908116808452919092205490911660643404801515600019829004605f111661140f575b6113a261139c611396605f840234610fa6565b926109d5565b34610fa6565b92806113dc575b5050806113b4575050565b600080809381938282156113d3575bf1156113cb57565b6108bf610e50565b506108fc6113c3565b60008080938193828215611406575bf1156113f9575b38806113a9565b611401610e50565b6113f2565b506108fc6113eb565b6114176109be565b611383565b1561142357565b5060405162461bcd60e51b815260206004820152602b60248201527f4d61726b6574706c6163653a20547261646520726f756e64206973206e6f742060448201526a1cdd185c9d1959081e595d60aa1b6064820152608490fd5b600390600b548110156114a7575b600b600052026000805160206120378339815191520190600090565b6114af610a74565b61148b565b156114bb57565b5060405162461bcd60e51b815260206004820152603960248201527f4d61726b6574706c6163653a20596f752063616e277420627579206d6f72652060448201527f746f6b656e73207468616e2062696420737065636966696564000000000000006064820152608490fd5b1561049a57565b1561153557565b5060405162461bcd60e51b815260206004820152602660248201527f4d61726b6574706c6163653a20596f7520646f6e2774206861766520656e6f756044820152650ced040cae8d60d31b6064820152608490fd5b6115b56115b060026115a86005546000526009602052604060002090565b015460ff1690565b61141c565b6115be8161147d565b509060028201927f4b5796113f074ebf8f11d5bcdeb6349b2fbe47abed78419cdcdbbc15c6fcf845816115f2865482610a25565b956116eb6116ba600188019761160b858a5410156114b4565b600354611620906001600160a01b0316610db5565b60405163a9059cbb60e01b8152336004820152602481018790526116639060208180604481010381600080975af1908115611765575b8391611750575b50611527565b61166e8b341461152e565b6116766118db565b8080808d61169d6103e8611696610db5610db58a5460018060a01b031690565b92046109f7565b90828215611747575bf11561173a575b546001600160a01b031690565b9154604080513381526001600160a01b03909416602085015283019390935260608201929092529081906080820190565b0390a18254818114156117295750506117049150611ca3565b61172561171d6005546000526009602052604060002090565b918254610a38565b9055565b6117339250610fa6565b9055611704565b611742610e50565b6116ad565b506108fc6116a6565b61175f91506113293d826106e7565b3861165d565b61176d610e50565b611656565b336000908152600080516020612057833981519152602090815260408083209092906117a09060ff90610d6d565b600b9182546117c1575b505050506108bf6117bc6005546118cb565b600555565b909192938280528282526117ee60ff610d6d338887209060018060a01b0316600052602052604060002090565b825b845481101561188a5761186390848461184d611816610db560035460018060a01b031690565b60016118218661147d565b5001548b5163a9059cbb60e01b8152336004820152602481019190915293849283919082906044820190565b03925af1801561187d575b611868575b506118cb565b6117f0565b611876906113293d826106e7565b503861185d565b611885610e50565b611858565b50939150507f0ca6d71558d925839af785a68aa39765d2e0aa87bba729b51fd252d3d7f1893391506118ba611ab3565b51338152602090a1388080806117aa565b6001906000198114610a44570190565b336000908152600a6020526040808220546001600160a01b0390811680845291909220549091166103e8340461192061191382610a0e565b918234106119a657610a0e565b92833410611999575b80611960575b50508061193a575050565b600080809381938291803414611956575b340391f1156113cb57565b6108fc925061194b565b60008080938193829180341461198f575b340391f115611982575b388061192f565b61198a610e50565b61197b565b6108fc9250611971565b6119a16109be565b611929565b6119ae6109be565b610a0e565b3360009081526000805160206120578339815191526020908152604080832090939291906119e39060ff90610d6d565b815b600b54811015611a4857611a4390838361184d611a0c610db560035460018060a01b031690565b6001611a178661147d565b5001548a5163a9059cbb60e01b8152336004820152602481019190915293849283919082906044820190565b6119e5565b505050907f0ca6d71558d925839af785a68aa39765d2e0aa87bba729b51fd252d3d7f1893390611a76611ab3565b513381528060208101611316565b90611a9b5760028160008093558260018201550155565b5050634e487b7160e01b600052600060045260246000fd5b600b5460009081600b5580611ac6575050565b6001917f555555555555555555555555555555555555555555555555555555555555555582118316611b34575b600b81526003926000805160206120378339815191529284028301925b838110611b1e575050505050565b8083869255838382015583600282015501611b10565b611b3c6109be565b611af3565b15611b4857565b5060405162461bcd60e51b815260206004820152602660248201527f4d61726b6574706c6163653a20596f75277265206e6f74206120746f6b656e2060448201526539b2b63632b960d11b6064820152608490fd5b6113167f251919ae8f37dab58eaf442981d38495abe61dc6ae1208c99fc6482a87e8ada591611bef611bdf611bd18361147d565b50546001600160a01b031690565b6001600160a01b03163314611b41565b600354600090602090611c4690611c0e906001600160a01b0316610db5565b6001611c198661147d565b50015460405163a9059cbb60e01b8152336004820152602481019190915293849283919082906044820190565b03925af18015611c96575b611c81575b50611c69611c638261147d565b90611a84565b60408051338152602081019290925290918291820190565b611c8f906113293d826106e7565b5038611c56565b611c9e610e50565b611c51565b611c63611caf9161147d565b7f067d50196410e78fdeb2df996249415b908249a74137c007b630056d9f5afbbb6020604051338152a1565b90816020910312610010575190565b15611cf157565b5060405162461bcd60e51b815260206004820152603160248201527f4d61726b6574706c6163653a20596f7520646f6e2774206861766520656e6f7560448201527019da081d1bdad95b9cc81d1bc81cd95b1b607a1b6064820152608490fd5b7f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbb60406003600b5468010000000000000000811015611e13575b6001810180600b55811015611e06575b600b60005284519102600080516020612037833981519152810180546001600160a01b039093166001600160a01b0319909316929092179091559260208101517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dba8501550151910155565b611e0e610a74565b611d9b565b611e1b6106a7565b611d8b565b6003547fbc13236afe4f10fc8d44c86b16e9e6695b2758938a2bedf6ceef72157259447b929190611ef190611e5d906001600160a01b0316610db5565b6040516370a0823160e01b8152336004820152611e9690602081602481865afa908115611f50575b600091611f32575b50841115611cea565b611e9e610a4c565b3381529060208281018590526040808401879052516323b872dd60e01b815233600482015230602482015260448101869052918290816000816064810103925af18015611f25575b611f10575b50611d51565b6040805133815260208101929092528101919091528060608101611316565b611f1e906113293d826106e7565b5038611eeb565b611f2d610e50565b611ee6565b611f4a9150611f413d826106e7565b3d810190611cdb565b38611e8d565b611f58610e50565b611e85565b600b549067ffffffffffffffff8211611ff2575b6040918251926020611f88818460051b01866106e7565b82855280850191600b600052600080516020612037833981519152906000935b858510611fb757505050505050565b6003846001928451611fc8816106be565b848060a01b0387541681528487015483820152600287015486820152815201930194019391611fa8565b611ffa6106a7565b611f71565b606460676503a352944000928060001904821181151516612029575b020481198111610a44570190565b6120316109be565b61201b56fe0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5a364697066735822122090e4c38ef173c4dc1afaafd15f28b7c866ff00363d174dc04be98c286d698a946c6578706572696d656e74616cf564736f6c634300080b0041";

type TokenMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenMarketplace__factory extends ContractFactory {
  constructor(...args: TokenMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenMarketplace> {
    return super.deploy(
      _tokenAddress,
      overrides || {}
    ) as Promise<TokenMarketplace>;
  }
  getDeployTransaction(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  attach(address: string): TokenMarketplace {
    return super.attach(address) as TokenMarketplace;
  }
  connect(signer: Signer): TokenMarketplace__factory {
    return super.connect(signer) as TokenMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMarketplaceInterface {
    return new utils.Interface(_abi) as TokenMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMarketplace {
    return new Contract(address, _abi, signerOrProvider) as TokenMarketplace;
  }
}
