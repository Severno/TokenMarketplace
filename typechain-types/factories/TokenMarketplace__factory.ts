/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenMarketplace,
  TokenMarketplaceInterface,
} from "../TokenMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
    ],
    name: "AllBidsCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "BidCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
    ],
    name: "BidClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "BidCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "BuyToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyOnSaleRound",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelAllBids",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "cancelBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
    ],
    name: "destributeTreasureForTrade",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endSaleRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTradeRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBids",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct TokenMarketplace.Bid[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "referrals",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referral",
        type: "address",
      },
    ],
    name: "registration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registrations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "saleRounds",
    outputs: [
      {
        internalType: "uint256",
        name: "maxTradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startSaleRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "trade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tradeRounds",
    outputs: [
      {
        internalType: "uint256",
        name: "tradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346200007457601f62002b0e38819003918201601f19168301916001600160401b038311848410176200007a578084926020946040528339810103126200007457516001600160a01b03811681141562000074576200006490620000b8565b6040516128579081620002b78239f35b50600080fd5b50505050634e487b7160e01b600052604160045260246000fd5b81156200009f570490565b505050634e487b7160e01b600052601260045260246000fd5b6200011e90670de0b6b3a7640000600255620000d46000600355565b620000e16203f480600455565b620000f16509184e72a000600555565b620000fc3362000219565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60055460039060026200013c83546000526006602052604060002090565b0155620001656200015882546000526006602052604060002090565b670de0b6b3a76400009055565b6200018c60056200018183546000526006602052604060002090565b01805460ff19169055565b60006001620001a683546000526006602052604060002090565b0155426004620001c183546000526006602052604060002090565b01558054906200021562000204620001e3846000526006602052604060002090565b546002620001fb866000526006602052604060002090565b01549062000094565b926000526006602052604060002090565b0155565b6001600160a01b03811660009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff161562000261575050565b818052602082815260408084206001600160a01b038416600090815292529020600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d81604051a456fe6040608081526004361015610015575b50600080fd5b600090813560e01c806301ffc9a71461045c5780630763485e146104455780630840605a1461042e578063248a9ca3146103f45780632f2ff15d146103dc578063304721d2146103c557806336568abe146103ad57806345199ce11461033257806349c37867146102df57806382dff96e146102cd57806391d148541461026f578063942e6bcf1461023a5780639703ef3514610223578063a217fddf14610203578063b59bfa03146101ec578063b7751c71146101d4578063b81c78ec146101ad578063d547741f14610195578063dd27ee6b1461017e578063de55de2814610167578063e20be69a146101515763e697b5d814610114575061000f565b3461014d57610149915061013061012a366105a8565b90610658565b90516001600160a01b0390911681529081906020820190565b0390f35b5080fd5b5061016461015e36610535565b9061185d565b51f35b503461014d576101763661051c565b610164611f12565b503461014d5761018d3661051c565b610164611bea565b503461014d576101646101a7366104ed565b906109e5565b503461014d5761014991506101c13661051c565b6101c96125ad565b90519182918261054b565b503461014d576101646101e636610535565b906123a4565b503461014d576101fb3661051c565b610164610f8b565b50903461021e57506102143661051c565b5160008152602090f35b809150fd5b503461014d57610164610235366104db565b6120a0565b503461014d576101499150610130610251366104b8565b6001600160a01b039081166000908152600960205260409020541690565b503461014d5761014991506102bc6102b561029e61028c366104ed565b91906000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b905190151581529081906020820190565b506102d73661051c565b61016461156d565b503461014d5761014991506103166102f6366104db565b6000526007602052604060002080549160ff600260018401549301541690565b9251918252602082015290151560408201529081906060820190565b503461014d57610149915061037c610349366104db565b600052600660205260406000209081549160018101549160028201549160038101549160ff600560048401549301541690565b9551948552602085019390935260408401919091526060830152608082015290151560a082015290819060c0820190565b503461014d576101646103bf366104ed565b90610a0d565b503461014d576103d43661051c565b610164611088565b503461014d576101646103ee366104ed565b906106c3565b503461014d57610149915061041f61040b366104db565b600052600060205260016040600020015490565b90519081529081906020820190565b503461014d57610164610440366104b8565b610e14565b50610149915061041f610457366104b8565b611d53565b50503461048a5750607f1961048561047b6104763661048d565b610697565b151560805260a090565b016080f35b80fd5b602090600319011261000f576004356001600160e01b031981168114156104b15790565b5050600080fd5b602090600319011261000f576004356001600160a01b0381168114156104b15790565b602090600319011261000f5760043590565b604090600319011261000f57600435906024356001600160a01b0381168114156105145790565b505050600080fd5b600090600319011261000f57565b600091031261000f57565b604090600319011261000f576004359060243590565b60208082019080835283518092528060408094019401926000905b83821061057557505050505090565b845180516001600160a01b0316875280840151878501528101518682015260609095019493820193600190910190610566565b604090600319011261000f576004356001600160a01b0381168114156104b1579060243590565b50634e487b7160e01b600052603260045260246000fd5b8054156105fc575b600052602060002090600090565b6106046105cf565b6105ee565b805460011015610625575b600052600160206000200190600090565b61062d6105cf565b610614565b805482101561064b575b60005260206000200190600090565b6106536105cf565b61063c565b9060018060a01b038092166000526008602052604060002090815481101561068e5761068391610632565b90549060031b1c1690565b50505050600080fd5b63ffffffff60e01b16637965db0b60e01b81149081156106b5575090565b6301ffc9a760e01b14919050565b90600091808352826020526106e060016040852001543390610881565b808352602083815260408085206001600160a01b0385166000908152925290205460ff161561070e57505050565b808352602083815260408085206001600160a01b038516600090815292529020600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d3393604051a4565b918091926000905b82821061078257501161077b575050565b6000910152565b9150806020918301518186015201829161076a565b906107aa60209282815194859201610762565b0190565b50634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176107e157604052565b6107e96107ae565b604052565b6080810190811067ffffffffffffffff8211176107e157604052565b6040810190811067ffffffffffffffff8211176107e157604052565b90601f8019910116810190811067ffffffffffffffff8211176107e157604052565b9060209161086181518092818552858086019101610762565b601f01601f1916010190565b90602061087e928181520190610848565b90565b9081600052600060205260ff6108ad8260406000209060018060a01b0316600052602052604060002090565b5416156108b8575050565b6001600160a01b031691506108cb610ba4565b9160306108d784610bbf565b5360786108e384610bd5565b5360295b6001811161099657506109929261096c6109106109499461090b61097a9515610c20565b610c6c565b6109666040519586947f416363657373436f6e74726f6c3a206163636f756e742000000000000000000060208701526037860190610797565b7001034b99036b4b9b9b4b733903937b6329607d1b815260110190565b90610797565b03601f198101835282610826565b60405162461bcd60e51b81529182916004830161086d565b0390fd5b9080600f6109d3921660108110156109d8575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a6109c98487610be6565b5360041c91610c05565b6108e7565b6109e06105cf565b6109a9565b90610a0b91806000526000602052610a066001604060002001543390610881565b610a88565b565b906001600160a01b038116331415610a2857610a0b91610a88565b505060405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260849150fd5b6000818152602081815260408083206001600160a01b03861684529091528120549092919060ff16610ab957505050565b808352602083815260408085206001600160a01b03851660009081529252902060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b3393604051a4565b50634e487b7160e01b600052601160045260246000fd5b605f908060001904821181151516610b37570290565b610b3f610b0a565b0290565b6061908060001904821181151516610b37570290565b6103cf908060001904821181151516610b37570290565b8060001904821181151516610b37570290565b81198111610b8f570190565b6107aa610b0a565b60405190610a0b826107c5565b60405190610bb1826107c5565b602a82526040366020840137565b602090805115610bcd570190565b6107aa6105cf565b602190805160011015610bcd570190565b906020918051821015610bf857010190565b610c006105cf565b010190565b8015610c13575b6000190190565b610c1b610b0a565b610c0c565b15610c2757565b50606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b60405190610c79826107ee565b6042825260603660208401376030610c9083610bbf565b536078610c9c83610bd5565b536041905b60018211610cb45761087e915015610c20565b80600f610ce692166010811015610cec575b6f181899199a1a9b1b9c1cb0b131b232b360811b901a6109c98486610be6565b90610ca1565b610cf46105cf565b610cc6565b15610d0057565b5060405162461bcd60e51b815260206004820152603460248201527f4d61726b6574706c6163653a20596f752063616e27742063686f6f736520796f6044820152731d5c9cd95b1988185cc818481c9959995c9c985b60621b6064820152608490fd5b15610d6a57565b5060405162461bcd60e51b815260206004820152602d60248201527f4d61726b6574706c6163653a20557365722063616e206f6e6c7920686176652060448201526c74776f20726566657272616c7360981b6064820152608490fd5b8054610de491600160401b821015610e07575b600182018155610632565b819291549060031b9160018060a01b039283811b93849216901b16911916179055565b610e0f6107ae565b610dd9565b604051636d786a5560e11b60208201526001600160a01b038216602482018190523360448084019190915282529190610e5590610e50816107ee565b6126cb565b8115610ed657610e6a610a0b92331415610cf9565b6001600160a01b038116600090815260086020526040902054610e909060021415610d63565b33600090815260096020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b031660009081526008602052604090203390610dc6565b505060405162461bcd60e51b815260206004820152602d60248201527f4d61726b6574706c6163653a20526566657272616c2063616e2774206265206160448201526c207a65726f206164647265737360981b606482015260849150fd5b15610f3b57565b5060405162461bcd60e51b815260206004820152602160248201527f4d61726b6574706c6163653a20596f7520617265206e6f7420616e2061646d696044820152603760f91b6064820152608490fd5b3360009081526000805160206127f483398151915260205260408120610fb69060ff905b5416610f34565b60035461106e575b610fd46003546000526006602052604060002090565b60058101805460ff19166001179055600154600390611003906001600160a01b03165b6001600160a01b031690565b910154813b15611067576040516340c10f1960e01b8152306004820152602481019190915291908290604490829084905af1801561105a575b6110435750565b610a0b906110513d82610826565b3d81019061052a565b61106261107b565b61103c565b5050809150fd5b61107661139d565b610fbe565b506040513d6000823e3d90fd5b3360009081526000805160206127f483398151915260205260408120611100916005916110f591906110bc9060ff90610faf565b600354908181526006602052600160408220015482825260066020526040822054141561112f575b506000526006602052604060002090565b01805460ff19169055565b6111086111f8565b610a0b6003546000526007602052600260406000206000815501600160ff19825416179055565b61114e6004604083856111569552600660205220015460045490610b83565b42111561115c565b386110e4565b1561116357565b5060405162461bcd60e51b815260206004820152603160248201527f4d6172746b6574706c6163653a2053616c6520726f756e642074696d65206973604482015270081b9bdd08199a5b9a5cda1959081e595d607a1b6064820152608490fd5b60018110610c13576000190190565b8181106111dd570390565b6111e5610b0a565b0390565b908160209103126104b1575190565b60035461129161123f6003611217846000526006602052604060002090565b01546112396001611232866000526006602052604060002090565b0154612686565b906111d2565b8261125a600161123284966000526006602052604060002090565b9060036112896001611276846000526006602052604060002090565b0154926000526006602052604060002090565b015491612729565b6001546112a6906001600160a01b0316610ff7565b6040516370a0823160e01b81523060048201526112dc90602081602481865afa908115611340575b600091611322575b506126a4565b816112e5575050565b803b1561051457604051632770a7eb60e21b815230600482015260248101929092526000908290604490829084905af1801561105a576110435750565b61133a91506113313d82610826565b3d8101906111e9565b386112d6565b61134861107b565b6112ce565b8115611357570490565b505050634e487b7160e01b600052601260045260246000fd5b6040519061137d8261080a565b60118252701cd95d1d5c13995dd4d85b19549bdd5b99607a1b6020830152565b610a0b600361149681546113c36113b3826111c3565b6000526006602052604060002090565b60026113e16113d1846111c3565b6000526007602052604060002090565b91019160026114046113f3855461264f565b926000526006602052604060002090565b01555461141c84546000526006602052604060002090565b5561143760056110f585546000526006602052604060002090565b6000600161145085546000526006602052604060002090565b015582548361148e6113f361146f846000526006602052604060002090565b546002611486866000526006602052604060002090565b01549061134d565b01555461264f565b906114c48154916114b1836000526006602052604060002090565b0154916000526006602052604060002090565b54916114ce611370565b612785565b156114da57565b5060405162461bcd60e51b815260206004820152604560248201527f4d61726b6574706c6163653a2054686520746f6b656e2070757263686173652060448201527f6c696d697420666f72207468697320726f756e6420686173206265656e2072656064820152641858da195960da1b608482015260a490fd5b908160209103126104b157518015158114156104b15790565b7ff6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb6115a46003546000526006602052604060002090565b600181016115ca81546115c36115ba3483610b83565b855410156114d3565b3490610b83565b905560026115f0816115e86003546000526006602052604060002090565b01543461134d565b9160006020611642611602863361169d565b600154611617906001600160a01b0316610ff7565b60405163a9059cbb60e01b815233600482015260248101929092529093849283919082906044820190565b03925af18015611690575b611672575b50015460408051338152602081019390935282015280606081015b0390a1565b611689906116803d82610826565b3d810190611554565b5038611652565b61169861107b565b61164d565b6001600160a01b031660009081526009602052604090206116c6905b546001600160a01b031690565b8190606482046116f06116ea6116e46116de84610b21565b866111d2565b92610b43565b846111d2565b92600161170f8460018060a01b03166000526008602052604060002090565b541461180b575b50506001600160a01b03811660009081526008602052604090205460021461173d57505090565b916117d360208361087e9561179b611786611781611765610ff760015460018060a01b031690565b6001600160a01b03909416600090815260086020526040902090565b610609565b905460039190911b1c6001600160a01b031690565b60405163a9059cbb60e01b81526001600160a01b03909116600482015260248101929092529092839190829060009082906044820190565b03925af180156117fe575b6117e9575b506111d2565b6117f7906116803d82610826565b50386117e3565b61180661107b565b6117de565b6118559294506117d360208361182b610ff760015460018060a01b031690565b6001600160a01b038916600090815260086020526040902061179b90611786906105e6565b6105e6565b913880611716565b90600354916000928352600760205260ff60026040852001541615611a605761166d6119e77f4b5796113f074ebf8f11d5bcdeb6349b2fbe47abed78419cdcdbbc15c6fcf845946116b96118b085611abc565b50916002830195876118c3885482610b70565b9260018601906118e08383546118db82821015611af3565b6111d2565b8255600154611939906118fb906001600160a01b0316610ff7565b60405163a9059cbb60e01b815233600482015260248101869052906020908290604490829087905af1908115611a53575b8391611a3e575b50611b66565b611944853414611b6d565b33600052600960205261196e6119626103e834046119688282610b59565b346111d2565b50610b59565b50808080611988610ff7610ff78c5460018060a01b031690565b81903415611a34575b3491f115611a27575b5414611a18575b506119b86003546000526007602052604060002090565b6119c3828254610b83565b9055600354906119dd826000526007602052604060002090565b54906114ce611bc9565b9154604080513381526001600160a01b03909416602085015283019390935260608201929092529081906080820190565b611a21906121e6565b386119a1565b611a2f61107b565b61199a565b6108fc9150611991565b611a4d91506116803d82610826565b38611933565b611a5b61107b565b61192c565b50505050608460405162461bcd60e51b815260206004820152602b60248201527f4d61726b6574706c6163653a20547261646520726f756e64206973206e6f742060448201526a1cdd185c9d1959081e595d60aa1b6064820152fd5b600390600a54811015611ae6575b600a600052026000805160206127d48339815191520190600090565b611aee6105cf565b611aca565b15611afa57565b5060405162461bcd60e51b815260206004820152603960248201527f4d61726b6574706c6163653a20596f752063616e277420627579206d6f72652060448201527f746f6b656e73207468616e2062696420737065636966696564000000000000006064820152608490fd5b1561000f57565b15611b7457565b5060405162461bcd60e51b815260206004820152602660248201527f4d61726b6574706c6163653a20596f7520646f6e2774206861766520656e6f756044820152650ced040cae8d60d31b6064820152608490fd5b60405190611bd68261080a565b6005825264747261646560d81b6020830152565b3360009081526000805160206127f483398151915260209081526040808320909290611c189060ff90610faf565b600a918254611c39575b50505050610a0b611c34600354611d43565b600355565b90919293828052828252611c6660ff610faf338887209060018060a01b0316600052602052604060002090565b825b8454811015611d0257611cdb908484611cc56001611c8f610ff7825460018060a01b031690565b90611c9986611abc565b5001548b5163a9059cbb60e01b8152336004820152602481019190915293849283919082906044820190565b03925af18015611cf5575b611ce0575b50611d43565b611c68565b611cee906116803d82610826565b5038611cd5565b611cfd61107b565b611cd0565b50939150507f0ca6d71558d925839af785a68aa39765d2e0aa87bba729b51fd252d3d7f189339150611d32612012565b51338152602090a138808080611c22565b6001906000198114610b8f570190565b3360009081526000805160206127f4833981519152602052604081209091611da0916116b99190611d869060ff90610faf565b6001600160a01b0316600090815260096020526040902090565b34916103e8830490611dcc611dc6611dc0611dba85610b59565b876111d2565b93610b59565b856111d2565b926001611deb8260018060a01b03166000526008602052604060002090565b5414611ed8575b6001600160a01b038116600090815260086020526040902054600214611e7d575b6001600160a01b031660009081526008602052604090205b5415611e38575b50505090565b9181838080611e649796611e4f8661123998610b83565b818115611e74575b3090f115611e6c576111d2565b388080611e32565b6118db61107b565b506108fc611e57565b93611ec784611e2b928480808085611eb4610ff7610ff78f6117816117869160018060a01b03166000526008602052604060002090565b828215611ecf575bf115611e6c576111d2565b949050611e13565b506108fc611ebc565b9382611f0c918380808085611eb4610ff7610ff76117868f6118509060018060a01b03166000526008602052604060002090565b93611df2565b3360009081526000805160206127f4833981519152602090815260408083209093929190611f429060ff90610faf565b815b600a54811015611fa757611fa2908383611cc56001611f6c610ff7825460018060a01b031690565b90611f7686611abc565b5001548a5163a9059cbb60e01b8152336004820152602481019190915293849283919082906044820190565b611f44565b505050907f0ca6d71558d925839af785a68aa39765d2e0aa87bba729b51fd252d3d7f1893390611fd5612012565b51338152806020810161166d565b90611ffa5760028160008093558260018201550155565b5050634e487b7160e01b600052600060045260246000fd5b600a5460009081600a5580612025575050565b6001917f555555555555555555555555555555555555555555555555555555555555555582118316612093575b600a81526003926000805160206127d48339815191529284028301925b83811061207d575050505050565b808386925583838201558360028201550161206f565b61209b610b0a565b612052565b6120a981611abc565b50546001600160a01b03163314156121905761166d7f251919ae8f37dab58eaf442981d38495abe61dc6ae1208c99fc6482a87e8ada591600060206121336120fb610ff760015460018060a01b031690565b600161210686611abc565b50015460405163a9059cbb60e01b8152336004820152602481019190915293849283919082906044820190565b03925af18015612183575b61216e575b5061215661215082611abc565b90611fe3565b60408051338152602081019290925290918291820190565b61217c906116803d82610826565b5038612143565b61218b61107b565b61213e565b505060405162461bcd60e51b815260206004820152602660248201527f4d61726b6574706c6163653a20596f75277265206e6f74206120746f6b656e2060448201526539b2b63632b960d11b6064820152608490fd5b6121506121f291611abc565b7f067d50196410e78fdeb2df996249415b908249a74137c007b630056d9f5afbbb6020604051338152a1565b1561222557565b5060405162461bcd60e51b815260206004820152603160248201527f4d61726b657470616c63653a20596f7520646f6e2774206861766520656e6f7560448201527019da081d1bdad95b9cc81d1bc81cd95b1b607a1b6064820152608490fd5b604051906122928261080a565b600f82526e6372656174654269644265666f726560881b6020830152565b604051906122bd8261080a565b600e82526d31b932b0ba32a134b220b33a32b960911b6020830152565b7fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa60406003600a54600160401b811015612397575b6001810180600a5581101561238a575b600a600052845191026000805160206127d4833981519152810180546001600160a01b039093166001600160a01b0319909316929092179091559260208101517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a98501550151910155565b6123926105cf565b61231f565b61239f6107ae565b61230f565b6001547fbc13236afe4f10fc8d44c86b16e9e6695b2758938a2bedf6ceef72157259447b92919061166d906123e1906001600160a01b0316610ff7565b604080516370a0823160e01b8082523360048301529192612507929091612502919061242990602081602481885afa9081156125a0575b60009161258b575b5088111561221e565b600060206124ac612438610b97565b3381528281018b90528881018c9052885185815230600482015290969061247e908481602481865afa90811561257e575b8691612569575b50612479612285565b6126e6565b88516323b872dd60e01b8152336004820152306024820152604481018c905293849283919082906064820190565b03925af1801561255c575b612547575b506001546020906124d5906001600160a01b0316610ff7565b8651928352306004840152829060249082905afa90811561253a575b600091612525575b506124796122b0565b6122da565b51338152602081019290925260408201929092529081906060820190565b61253491506113313d82610826565b386124f9565b61254261107b565b6124f1565b612555906116803d82610826565b50386124bc565b61256461107b565b6124b7565b61257891506113313d82610826565b38612470565b61258661107b565b612469565b61259a91506113313d82610826565b38612420565b6125a861107b565b612418565b600a549067ffffffffffffffff8211612642575b60409182519260206125d8818460051b0186610826565b82855280850191600a6000526000805160206127d4833981519152906000935b85851061260757505050505050565b6003846001928451612618816107c5565b848060a01b03875416815284870154838201526002870154868201528152019301940193916125f8565b61264a6107ae565b6125c1565b606460676503a352944000928060001904821181151516612679575b020481198111610b8f570190565b612681610b0a565b61266b565b61087e9060035460005260066020526002604060002001549061134d565b610a0b906040519063f5b1bba960e01b6020830152602482015260248152610e50816107c5565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b610e5061271591610a0b936040519384926309710a9d60e41b6020850152604060248501526064840190610848565b90604483015203601f198101835282610826565b91610a0b939160405193632e50569f60e11b602086015260248501526044840152606483015260848201526084815260c0810181811067ffffffffffffffff821117612778575b6040526126cb565b6127806107ae565b612770565b610e5091610a0b946127b5946040519586946304772b3360e11b60208701526080602487015260a4860190610848565b9260448501526064840152608483015203601f19810183528261082656fec65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5a3646970667358221220479e500dc8e10c074846f1cfa625ee3212741d77a6a14b7ade747ba04dbc7b226c6578706572696d656e74616cf564736f6c634300080b0041";

type TokenMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenMarketplace__factory extends ContractFactory {
  constructor(...args: TokenMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenMarketplace> {
    return super.deploy(
      _tokenAddress,
      overrides || {}
    ) as Promise<TokenMarketplace>;
  }
  getDeployTransaction(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  attach(address: string): TokenMarketplace {
    return super.attach(address) as TokenMarketplace;
  }
  connect(signer: Signer): TokenMarketplace__factory {
    return super.connect(signer) as TokenMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMarketplaceInterface {
    return new utils.Interface(_abi) as TokenMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMarketplace {
    return new Contract(address, _abi, signerOrProvider) as TokenMarketplace;
  }
}
