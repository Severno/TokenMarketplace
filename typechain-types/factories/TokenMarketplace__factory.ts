/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenMarketplace,
  TokenMarketplaceInterface,
} from "../TokenMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
    ],
    name: "AllBidsCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "BidCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
    ],
    name: "BidClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "BidCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "BuyToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tradeAmount",
        type: "uint256",
      },
    ],
    name: "EndSaleRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tradeAmount",
        type: "uint256",
      },
    ],
    name: "EndTradeRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_minted",
        type: "uint256",
      },
    ],
    name: "StartSaleRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bids",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "cancelBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endSaleRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTradeRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBids",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct TokenMarketplace.Bid[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referral",
        type: "address",
      },
    ],
    name: "registration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registrations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "saleRounds",
    outputs: [
      {
        internalType: "uint256",
        name: "maxTradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startSaleRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "trade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "tradeRounds",
    outputs: [
      {
        internalType: "uint256",
        name: "tradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a76400006004556005805464ffffffffff19166303f480001790556509184e72a0006006553480156200003b57600080fd5b50604051620024d9380380620024d98339810160408190526200005e91620001e7565b6001805460ff191681556002556200007860003362000137565b600380546001600160a01b0319166001600160a01b0383161790556006546005805460ff908116600090815260076020526040808220600290810195909555835483168252808220670de0b6b3a764000090558354831682528082208401805460ff191690558354831682528082206001018290558354831682528082204260049190910155925490911681522090810154905462000118919062000219565b60055460ff16600090815260076020526040902060030155506200023c565b62000143828262000147565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000143576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a33390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600060208284031215620001fa57600080fd5b81516001600160a01b03811681146200021257600080fd5b9392505050565b6000826200023757634e487b7160e01b600052601260045260246000fd5b500490565b61228d806200024c6000396000f3fe60806040526004361061012a5760003560e01c8063942e6bcf116100ab578063b7751c711161006f578063b7751c7114610392578063b81c78ec146103b2578063d547741f146103d4578063d66101c8146103f4578063dd27ee6b14610476578063e20be69a1461048b57600080fd5b8063942e6bcf146102f25780639703ef3514610340578063a217fddf14610360578063a482171914610375578063b59bfa031461037d57600080fd5b8063304721d2116100f2578063304721d21461024057806336568abe146102555780634423c5f1146102755780635c975abb146102ba57806391d14854146102d257600080fd5b806301ffc9a71461012f57806302272043146101645780630840605a146101c0578063248a9ca3146101e25780632f2ff15d14610220575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611e45565b61049e565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b506101a361017f366004611e6f565b60086020526000908152604090208054600182015460029092015490919060ff1683565b60408051938452602084019290925215159082015260600161015b565b3480156101cc57600080fd5b506101e06101db366004611eae565b6104d5565b005b3480156101ee57600080fd5b506102126101fd366004611ec9565b60009081526020819052604090206001015490565b60405190815260200161015b565b34801561022c57600080fd5b506101e061023b366004611ee2565b610652565b34801561024c57600080fd5b506101e061067d565b34801561026157600080fd5b506101e0610270366004611ee2565b6107d7565b34801561028157600080fd5b50610295610290366004611ec9565b610855565b604080516001600160a01b03909416845260208401929092529082015260600161015b565b3480156102c657600080fd5b5060015460ff1661014f565b3480156102de57600080fd5b5061014f6102ed366004611ee2565b610892565b3480156102fe57600080fd5b5061032861030d366004611eae565b6009602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b34801561034c57600080fd5b506101e061035b366004611ec9565b6108bb565b34801561036c57600080fd5b50610212600081565b6101e0610aa8565b34801561038957600080fd5b506101e0610c9e565b34801561039e57600080fd5b506101e06103ad366004611f0e565b610e4e565b3480156103be57600080fd5b506103c76110e3565b60405161015b9190611f30565b3480156103e057600080fd5b506101e06103ef366004611ee2565b611165565b34801561040057600080fd5b5061044761040f366004611e6f565b600760205260009081526040902080546001820154600283015460038401546004850154600590950154939492939192909160ff1686565b6040805196875260208701959095529385019290925260608401526080830152151560a082015260c00161015b565b34801561048257600080fd5b506101e061118b565b6101e0610499366004611f0e565b61123d565b60006001600160e01b03198216637965db0b60e01b14806104cf57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60015460ff16156105015760405162461bcd60e51b81526004016104f890611f92565b60405180910390fd5b6002805414156105235760405162461bcd60e51b81526004016104f890611fbc565b600280556001600160a01b03811661057d5760405162461bcd60e51b815260206004820181905260248201527f526566657272616c2063616e27742062652061207a65726f206164647265737360448201526064016104f8565b6001600160a01b0381163314156105e65760405162461bcd60e51b815260206004820152602760248201527f596f752063616e27742063686f6f736520796f757273656c66206173206120726044820152661959995c9c985b60ca1b60648201526084016104f8565b3360008181526009602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251938452908301527f0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e5591015b60405180910390a1506001600255565b60008281526020819052604090206001015461066e813361156f565b61067883836115d3565b505050565b610688600033610892565b6106a45760405162461bcd60e51b81526004016104f890611ff3565b60055460ff166000908152600760205260409020805460019091015414610734576106cd611657565b156107345760405162461bcd60e51b815260206004820152603160248201527f4d6172746b6574706c6163653a2053616c6520726f756e642074696d65206973604482015270081b9bdd08199a5b9a5cda1959081e595d607a1b60648201526084016104f8565b6005805460ff16600090815260076020526040902001805460ff1916905561075a61168f565b61078460055460ff166000908152600860205260408120908155600201805460ff19166001179055565b60055460ff16600081815260076020908152604091829020600101548251938452908301527f054f99a991014b077c99ef6e36180276dc734d78cb6a69513cfc8f431ab180be91015b60405180910390a1565b6001600160a01b03811633146108475760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016104f8565b6108518282611728565b5050565b600a818154811061086557600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60015460ff16156108de5760405162461bcd60e51b81526004016104f890611f92565b6002805414156109005760405162461bcd60e51b81526004016104f890611fbc565b60028055600a80543391908390811061091b5761091b612021565b60009182526020909120600390910201546001600160a01b0316146109825760405162461bcd60e51b815260206004820152601960248201527f596f75277265206e6f74206120746f6b656e2073656c6c65720000000000000060448201526064016104f8565b600354600a80546001600160a01b039092169163a9059cbb913391859081106109ad576109ad612021565b60009182526020909120600160039092020101546040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190612037565b50600a8181548110610a4457610a44612021565b6000918252602080832060039290920290910180546001600160a01b03191681556001810183905560020191909155604080513381529182018390527f251919ae8f37dab58eaf442981d38495abe61dc6ae1208c99fc6482a87e8ada59101610642565b60015460ff1615610acb5760405162461bcd60e51b81526004016104f890611f92565b600280541415610aed5760405162461bcd60e51b81526004016104f890611fbc565b6002805560055460ff1660009081526007602052604090208054600190910154610b1890349061206f565b1115610b8c5760405162461bcd60e51b815260206004820152603860248201527f54686520746f6b656e207075726368617365206c696d697420666f722074686960448201527f7320726f756e6420686173206265656e2072656163686564000000000000000060648201526084016104f8565b610b9461178d565b6000610b9f3461188d565b60055460ff16600090815260076020526040812060010180549293508392909190610bcb90849061206f565b909155505060035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c459190612037565b5060055460ff16600090815260076020908152604091829020600201548251338152918201849052918101919091527ff6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb90606001610642565b610ca9600033610892565b610cc55760405162461bcd60e51b81526004016104f890611ff3565b6005805460ff9081166000908152600760205260409020909101541615610d545760405162461bcd60e51b815260206004820152603d60248201527f596f752063616e2774207374617274206e657720726f756e64207768696c652060448201527f70726576696f757365206973206e6f742066696e69736865642079657400000060648201526084016104f8565b60055460ff1615610d6757610d676118af565b6005805460ff9081166000908152600760205260408082208401805460ff191660011790556003805494549093168252908190209091015490516340c10f1960e01b815230600482015260248101919091526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015610de857600080fd5b505af1158015610dfc573d6000803e3d6000fd5b505060055460ff16600081815260076020908152604091829020600301548251938452908301527fa1ebc1abcc4f6bf1d4583f898ec183831e9ea8f4acff82a979bcb6c571d12eb993500190506107cd565b60015460ff1615610e715760405162461bcd60e51b81526004016104f890611f92565b600280541415610e935760405162461bcd60e51b81526004016104f890611fbc565b600280556003546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f039190612087565b821115610f5e5760405162461bcd60e51b8152602060048201526024808201527f596f7520646f6e2774206861766520656e6f75676820746f6b656e7320746f206044820152631cd95b1b60e21b60648201526084016104f8565b6003546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610fb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd99190612037565b506040805160608082018352338083526020808401878152848601878152600a805460018101825560009190915295517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8600390970296870180546001600160a01b0319166001600160a01b0390921691909117905590517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a9860155517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa9094019390935583519081529182018590529181018390527fbc13236afe4f10fc8d44c86b16e9e6695b2758938a2bedf6ceef72157259447b910160405180910390a150506001600255565b6060600a805480602002602001604051908101604052809291908181526020016000905b8282101561115c576000848152602090819020604080516060810182526003860290920180546001600160a01b0316835260018082015484860152600290910154918301919091529083529092019101611107565b50505050905090565b600082815260208190526040902060010154611181813361156f565b6106788383611728565b611196600033610892565b6111b25760405162461bcd60e51b81526004016104f890611ff3565b600a54156111c2576111c2611999565b60055460ff16600081815260086020908152604091829020548251938452908301527f9b0cd38b3ad16bdcb1d91665e766624da0f69412c461c939db45c9f5de199b94910160405180910390a16005805460ff16906000611222836120a0565b91906101000a81548160ff021916908360ff16021790555050565b60015460ff16156112605760405162461bcd60e51b81526004016104f890611f92565b6002805414156112825760405162461bcd60e51b81526004016104f890611fbc565b600280805560055460ff908116600090815260086020526040902090910154166112ee5760405162461bcd60e51b815260206004820152601e60248201527f547261646520726f756e64206973206e6f74207374617274656420796574000060448201526064016104f8565b6000600a838154811061130357611303612021565b906000526020600020906003020190506000611323838360020154611aa4565b9050828260010154101561138e5760405162461bcd60e51b815260206004820152602c60248201527f596f752063616e277420627579206d6f726520746f6b656e73207468616e206260448201526b1a59081cdc1958da599a595960a21b60648201526084016104f8565b60035460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156113df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114039190612037565b61140c57600080fd5b80341461145b5760405162461bcd60e51b815260206004820152601960248201527f596f7520646f6e2774206861766520656e6f756768206574680000000000000060448201526064016104f8565b611463611ab7565b81546001600160a01b03166108fc61147d6103e8846120c0565b611489906103b66120e2565b6040518115909202916000818181858888f193505050501580156114b1573d6000803e3d6000fd5b5081546002830154604080513381526001600160a01b039093166020840152820185905260608201527f4b5796113f074ebf8f11d5bcdeb6349b2fbe47abed78419cdcdbbc15c6fcf8459060800160405180910390a182826001015414156115215761151c84611bbd565b61153b565b828260010160008282546115359190612101565b90915550505b60055460ff166000908152600860205260408120805483929061155f90849061206f565b9091555050600160025550505050565b6115798282610892565b61085157611591816001600160a01b03166014611c33565b61159c836020611c33565b6040516020016115ad929190612144565b60408051601f198184030181529082905262461bcd60e51b82526104f8916004016121b9565b6115dd8282610892565b610851576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556116133390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60055460ff81166000908152600760205260408120600401549091429161168991610100900463ffffffff169061206f565b11905090565b60055460ff16600090815260076020526040812060018101546003909101546116b89190612101565b9050801561172557600354604051632770a7eb60e21b8152306004820152602481018390526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b15801561170c57600080fd5b505af1158015611720573d6000803e3d6000fd5b505050505b50565b6117328282610892565b15610851576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b33600090815260096020526040808220546001600160a01b039081168084529183205491929116906117c06064346120c0565b6117cb90605f6120e2565b6117d59034612101565b905060006117e46064346120c0565b6117ef9060616120e2565b6117f99034612101565b90506001600160a01b03841615611842576040516001600160a01b0385169083156108fc029084906000818181858888f19350505050158015611840573d6000803e3d6000fd5b505b6001600160a01b03831615611887576040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015611720573d6000803e3d6000fd5b50505050565b60055460ff166000908152600760205260408120600201546104cf90836120c0565b6005546118e8906007906000906118cb9060019060ff166121ec565b60ff1660ff16815260200190815260200160002060020154611dcf565b6005805460ff90811660009081526007602052604081206002019390935590546008929161191991600191166121ec565b60ff9081168252602080830193909352604091820160009081205460058054841683526007909552838220558354821681528281208401805460ff19169055835482168152828120600101819055925416825290206002810154905461197f91906120c0565b60055460ff16600090815260076020526040902060030155565b60005b600a54811015611a6757600354600a80546001600160a01b039092169163a9059cbb913391859081106119d1576119d1612021565b60009182526020909120600160039092020101546040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a549190612037565b5080611a5f8161220f565b91505061199c565b50611a74600a6000611df8565b6040513381527f0ca6d71558d925839af785a68aa39765d2e0aa87bba729b51fd252d3d7f18933906020016107cd565b6000611ab082846120e2565b9392505050565b33600090815260096020526040808220546001600160a01b03908116808452918320543493911690611aeb6103e8856120c0565b611af7906103cf6120e2565b611b019085612101565b90506000611b116103e8866120c0565b611b1d906103cf6120e2565b611b279086612101565b90506001600160a01b03841615611b70576040516001600160a01b0385169083156108fc029084906000818181858888f19350505050158015611b6e573d6000803e3d6000fd5b505b6001600160a01b03831615611720576040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015611bb5573d6000803e3d6000fd5b505050505050565b600a8181548110611bd057611bd0612021565b6000918252602080832060039290920290910180546001600160a01b031916815560018101839055600201919091556040513381527f067d50196410e78fdeb2df996249415b908249a74137c007b630056d9f5afbbb910160405180910390a150565b60606000611c428360026120e2565b611c4d90600261206f565b67ffffffffffffffff811115611c6557611c6561222a565b6040519080825280601f01601f191660200182016040528015611c8f576020820181803683370190505b509050600360fc1b81600081518110611caa57611caa612021565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611cd957611cd9612021565b60200101906001600160f81b031916908160001a9053506000611cfd8460026120e2565b611d0890600161206f565b90505b6001811115611d80576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d3c57611d3c612021565b1a60f81b828281518110611d5257611d52612021565b60200101906001600160f81b031916908160001a90535060049490941c93611d7981612240565b9050611d0b565b508315611ab05760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104f8565b60006064611dde8360676120e2565b611de891906120c0565b6104cf906503a35294400061206f565b508054600082556003029060005260206000209081019061172591905b80821115611e415780546001600160a01b03191681556000600182018190556002820155600301611e15565b5090565b600060208284031215611e5757600080fd5b81356001600160e01b031981168114611ab057600080fd5b600060208284031215611e8157600080fd5b813560ff81168114611ab057600080fd5b80356001600160a01b0381168114611ea957600080fd5b919050565b600060208284031215611ec057600080fd5b611ab082611e92565b600060208284031215611edb57600080fd5b5035919050565b60008060408385031215611ef557600080fd5b82359150611f0560208401611e92565b90509250929050565b60008060408385031215611f2157600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015611f8557815180516001600160a01b0316855286810151878601528501518585015260609093019290850190600101611f4d565b5091979650505050505050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601490820152732cb7ba9030b932903737ba1030b71030b236b4b760611b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561204957600080fd5b81518015158114611ab057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561208257612082612059565b500190565b60006020828403121561209957600080fd5b5051919050565b600060ff821660ff8114156120b7576120b7612059565b60010192915050565b6000826120dd57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156120fc576120fc612059565b500290565b60008282101561211357612113612059565b500390565b60005b8381101561213357818101518382015260200161211b565b838111156118875750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161217c816017850160208801612118565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516121ad816028840160208801612118565b01602801949350505050565b60208152600082518060208401526121d8816040850160208701612118565b601f01601f19169190910160400192915050565b600060ff821660ff84168082101561220657612206612059565b90039392505050565b600060001982141561222357612223612059565b5060010190565b634e487b7160e01b600052604160045260246000fd5b60008161224f5761224f612059565b50600019019056fea2646970667358221220e835955d682acfb0013a6898818c70fa3a58e5fb21f88f95113ab579991580b064736f6c634300080b0033";

type TokenMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenMarketplace__factory extends ContractFactory {
  constructor(...args: TokenMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenMarketplace> {
    return super.deploy(
      _tokenAddress,
      overrides || {}
    ) as Promise<TokenMarketplace>;
  }
  getDeployTransaction(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  attach(address: string): TokenMarketplace {
    return super.attach(address) as TokenMarketplace;
  }
  connect(signer: Signer): TokenMarketplace__factory {
    return super.connect(signer) as TokenMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMarketplaceInterface {
    return new utils.Interface(_abi) as TokenMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMarketplace {
    return new Contract(address, _abi, signerOrProvider) as TokenMarketplace;
  }
}
